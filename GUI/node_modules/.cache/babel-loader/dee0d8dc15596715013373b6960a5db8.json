{"ast":null,"code":"var _jsxFileName = \"/home/hussain/Desktop/React/starter/personal_finace_manager/src/components/userProfile.js\";\nimport NavBar from './nav.js';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { bgColors, bgColorsMidOp } from './styles/backgroundColors.js'; //////////////////////// STYLES \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = { ...bgColors\n};\nconst progressBarColors = { ...bgColorsMidOp\n};\nlet userImgStyle = {\n  height: 100,\n  width: 100,\n  borderRadius: 90\n}; //////////////////////// VIEWS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nconst ProgressBarFiller = styled.div`\n    width: ${props => props.width}%;\n    \n\n`;\n_c = ProgressBarFiller;\n\nfunction UserImg(props) {\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: props.picture,\n    style: userImgStyle,\n    alt: \"person img\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = UserImg;\n\nclass SingleInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: undefined\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let defaultValue = this.props.defaultValue ? this.props.defaultValue : '';\n    this.setState({\n      value: defaultValue\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    this.props.onSubmit(this.state.value);\n    this.setState({\n      value: ''\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      style: this.props.style,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group \",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          \"aria-label\": \"Recipient's username\",\n          \"aria-describedby\": \"button-addon2\",\n          type: this.props.inputType,\n          min: 0,\n          value: this.state.value,\n          onChange: this.handleChange,\n          placeholder: this.props.inputLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-outline-secondary\",\n          type: \"submit\",\n          value: this.props.inputSubmitLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction UserJumbotron(props) {\n  const toSaveToday = props.userData.hasPlan ? props.userData.plan.amount / (props.userData.plan.duration * 30) : 0;\n  const toSpendToday = props.userData.income / 30 - toSaveToday;\n  const todayExpense = props.userData.todayExpense;\n\n  const expensePercentage = () => {\n    let percentage = todayExpense * 95 / toSpendToday;\n    percentage = percentage > 100 ? 100 : percentage;\n    percentage = percentage < 0 ? 0 : percentage;\n    return percentage;\n  }; // Creating style of progress bar filler\n\n\n  var componentStyle = {\n    backgroundColor: statusColors[props.style]\n  };\n  var progressBarStyle = {\n    backgroundColor: progressBarColors[props.style]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: componentStyle,\n    className: \"component-container container-hovered container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-4\",\n      children: [/*#__PURE__*/_jsxDEV(UserImg, {\n        picture: props.userData.picture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), props.userData.userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [\"You have spent \", todayExpense, \" out of \", toSpendToday]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBarFiller, {\n      style: progressBarStyle,\n      width: expensePercentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 12\n  }, this);\n}\n\n_c3 = UserJumbotron;\n\nfunction PlanView(props) {\n  const toSaveToday = props.hasPlan ? props.plan.amount / (props.plan.duration * 30) : 0;\n  const todaySaving = props.income / 30 - props.todayEx;\n  var componentStyle = {\n    backgroundColor: statusColors[props.style] // Can add more styles...\n\n  };\n  return props.hasPlan ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: componentStyle,\n    className: \"component-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your plan is to save \", props.plan.amount, \" in \", props.plan.duration, \" months\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Today you have saved: \", todaySaving]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Target saving for today: \", toSaveToday]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    style: componentStyle,\n    className: \"component-container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You have no plans \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"Click Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 34\n      }, this), \" to Create one\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = PlanView;\nexport default class UserProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: 'Sagar Sikchi',\n      picture: 'https://www.jbldrains.com/wp-content/uploads/2015/02/person-icon.png',\n      hasPlan: true,\n      income: 420000,\n      availableAmount: 20000,\n      plan: {\n        amount: 90000,\n        duration: 3\n      },\n      isNewMonth: true,\n      isIncomeRegular: true,\n      todayExpense: 0\n    };\n  }\n\n  onSalaryReceiving(salaryAmount) {\n    this.setState({\n      isNewMonth: false,\n      availableAmount: this.state.availableAmount + parseInt(salaryAmount)\n    });\n  }\n\n  getStatus() {\n    // Getting daily Expense Status\n    let dailyExpenseStatus = '1';\n    const everydayEx = this.state.income / 30;\n    const todayEx = this.state.todayExpense;\n    const expenseRate = todayEx / everydayEx;\n    if (expenseRate > 1) dailyExpenseStatus = '4';else if (expenseRate > 0.66) dailyExpenseStatus = '3';else if (expenseRate > 0.33) dailyExpenseStatus = '2'; // Getting Plan Status\n\n    let planStatus = '1';\n    const toSaveToday = this.state.hasPlan ? this.state.plan.amount / (this.state.plan.duration * 30) : 0;\n    const todaySaving = everydayEx - todayEx;\n    if (todaySaving < 0) planStatus = '4';else if (todaySaving === 0) planStatus = '2'; // Getting available amount status\n\n    let availableAmountStatus = '1';\n    const availableAmount = this.state.availableAmount;\n    if (availableAmount < 50) availableAmountStatus = '4';else if (availableAmount < 500) availableAmountStatus = '3';else if (availableAmount < 1000) availableAmountStatus = '2'; // Salary Receiving Status\n\n    let salaryStatus = '2';\n\n    if (this.state.isIncomeRegular) {\n      salaryStatus = '1';\n      if (this.state.isNewMonth) salaryStatus = '3';\n    }\n\n    return {\n      dailyExpenseStyle: dailyExpenseStatus,\n      planStyle: planStatus,\n      availableAmountStyle: availableAmountStatus,\n      salaryStyle: salaryStatus,\n      defaultsStyle: '1'\n    };\n  }\n\n  onSpend(amount) {\n    const prevEx = this.state.todayExpense || 0;\n    const newExpense = amount === '' ? 0 : parseInt(amount);\n    this.setState({\n      todayExpense: prevEx + parseInt(newExpense),\n      availableAmount: this.state.availableAmount - parseInt(newExpense)\n    });\n  }\n\n  render() {\n    const status = this.getStatus();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        profile: \" active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(UserJumbotron, {\n        backgroundColorIndex: status.backgroundColorIndex,\n        userData: this.state,\n        style: status.dailyExpenseStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          backgroundColor: status.availableAmountStyle\n        },\n        children: [\"You have \", this.state.availableAmount, \" Money\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ProgressBarFiller\");\n$RefreshReg$(_c2, \"UserImg\");\n$RefreshReg$(_c3, \"UserJumbotron\");\n$RefreshReg$(_c4, \"PlanView\");","map":{"version":3,"sources":["/home/hussain/Desktop/React/starter/personal_finace_manager/src/components/userProfile.js"],"names":["NavBar","React","styled","bgColors","bgColorsMidOp","statusColors","progressBarColors","userImgStyle","height","width","borderRadius","ProgressBarFiller","div","props","UserImg","picture","SingleInput","Component","constructor","state","value","undefined","handleChange","bind","handleSubmit","componentDidMount","defaultValue","setState","event","target","onSubmit","preventDefault","render","style","inputType","inputLabel","inputSubmitLabel","UserJumbotron","toSaveToday","userData","hasPlan","plan","amount","duration","toSpendToday","income","todayExpense","expensePercentage","percentage","componentStyle","backgroundColor","progressBarStyle","userName","PlanView","todaySaving","todayEx","UserProfile","availableAmount","isNewMonth","isIncomeRegular","onSalaryReceiving","salaryAmount","parseInt","getStatus","dailyExpenseStatus","everydayEx","expenseRate","planStatus","availableAmountStatus","salaryStatus","dailyExpenseStyle","planStyle","availableAmountStyle","salaryStyle","defaultsStyle","onSpend","prevEx","newExpense","status","backgroundColorIndex"],"mappings":"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","sourcesContent":["import NavBar from './nav.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {bgColors, bgColorsMidOp} from './styles/backgroundColors.js'\n\n\n\n//////////////////////// STYLES \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \nconst statusColors = {...bgColors}\n\nconst progressBarColors = {...bgColorsMidOp}\n\nlet userImgStyle = {\n    height: 100,\n    width: 100,\n    borderRadius: 90,\n}\n\n//////////////////////// VIEWS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst ProgressBarFiller = styled.div`\n    width: ${props => props.width}%;\n    \n\n`\n\nfunction UserImg(props) {\n    return <img src = {props.picture} style={userImgStyle} alt=\"person img\"/>\n}\n\nclass SingleInput extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {value: undefined};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        let defaultValue = this.props.defaultValue ? this.props.defaultValue : ''\n        this.setState({\n            value: defaultValue\n        })\n    }\n  \n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      this.props.onSubmit(this.state.value)\n      this.setState({\n        value: ''\n      })\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit} style={this.props.style}>\n            <div className = 'input-group '>\n                <input \n                    className='form-control'\n                    aria-label=\"Recipient's username\" \n                    aria-describedby=\"button-addon2\"\n                    type={this.props.inputType} \n                    min={0}\n                    value={this.state.value} \n                    onChange={this.handleChange} \n                    placeholder={this.props.inputLabel}/>\n\n                <input \n                    className = 'btn btn-outline-secondary'\n                    type=\"submit\" \n                    value={this.props.inputSubmitLabel} />\n            </div>\n        </form>\n      );\n    }\n}\n\nfunction UserJumbotron(props) {\n    const toSaveToday = props.userData.hasPlan? props.userData.plan.amount/(props.userData.plan.duration * 30) : 0\n    const toSpendToday = props.userData.income/30-toSaveToday\n    const todayExpense = props.userData.todayExpense\n    const expensePercentage = () => {\n        let percentage = (todayExpense*95)/toSpendToday\n        percentage = percentage > 100 ? 100 : percentage\n        percentage = percentage < 0 ? 0 : percentage\n        return percentage\n    }\n\n    // Creating style of progress bar filler\n    var componentStyle = {\n        backgroundColor: statusColors[props.style]\n    }\n\n    var progressBarStyle = {\n        backgroundColor: progressBarColors[props.style]\n    }\n\n    return <div style={componentStyle} className=\"component-container container-hovered container\" >\n            <h1 className=\"display-4\" >\n                <UserImg picture = {props.userData.picture}/>\n                {props.userData.userName}\n            </h1>\n            <p className=\"lead\">You have spent {todayExpense} out of {toSpendToday}</p>\n            <ProgressBarFiller style = {progressBarStyle} width = {expensePercentage}/>\n        </div>\n}\n\nfunction PlanView(props) {\n    const toSaveToday = props.hasPlan? props.plan.amount/(props.plan.duration * 30) : 0\n    const todaySaving = props.income/30 - props.todayEx\n\n    var componentStyle = {\n        backgroundColor: statusColors[props.style]\n        // Can add more styles...\n    }\n\n    return  props.hasPlan ? \n        <div style={componentStyle} className = 'component-container'>\n            <p>Your plan is to save {props.plan.amount} in {props.plan.duration} months</p>\n            <p>Today you have saved: {todaySaving}</p>\n            <p>Target saving for today: {toSaveToday}</p>\n        </div> :\n\n        <div style={componentStyle} className = 'component-container'>\n            <p>You have no plans <a href = \"#\">Click Here</a> to Create one</p>\n        </div>\n}\n\nexport default class UserProfile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userName: 'Sagar Sikchi',\n            picture: 'https://www.jbldrains.com/wp-content/uploads/2015/02/person-icon.png',\n            hasPlan: true,\n            income: 420000,\n            availableAmount: 20000,\n            plan: {\n                amount: 90000,\n                duration: 3,\n            },\n            isNewMonth: true,\n            isIncomeRegular: true,\n            todayExpense: 0,\n        }\n    }\n\n    onSalaryReceiving(salaryAmount) {\n        this.setState({\n            isNewMonth: false,\n            availableAmount: this.state.availableAmount + parseInt(salaryAmount),\n        })\n    }\n\n    getStatus() {\n        \n        // Getting daily Expense Status\n        let dailyExpenseStatus = '1'\n\n        const everydayEx = this.state.income/30\n        const todayEx = this.state.todayExpense\n        const expenseRate = todayEx/everydayEx\n        \n        if(expenseRate > 1) dailyExpenseStatus = '4';\n        else if(expenseRate > 0.66) dailyExpenseStatus = '3';\n        else if(expenseRate > 0.33) dailyExpenseStatus = '2';\n\n\n        // Getting Plan Status\n        let planStatus = '1'\n        const toSaveToday = this.state.hasPlan? this.state.plan.amount/(this.state.plan.duration * 30) : 0\n        const todaySaving = everydayEx - todayEx                                                                \n        if(todaySaving < 0) planStatus = '4';\n        else if (todaySaving === 0) planStatus = '2';\n\n        // Getting available amount status\n        let availableAmountStatus = '1'\n        const availableAmount = this.state.availableAmount\n\n        if (availableAmount < 50) availableAmountStatus = '4'\n        else if (availableAmount < 500) availableAmountStatus = '3'\n        else if (availableAmount < 1000) availableAmountStatus = '2'\n        \n        // Salary Receiving Status\n        let salaryStatus = '2'\n        if(this.state.isIncomeRegular) {\n            salaryStatus = '1'\n            if (this.state.isNewMonth) \n                salaryStatus = '3'; \n        } \n\n        return {\n            dailyExpenseStyle: dailyExpenseStatus,\n            planStyle: planStatus,\n            availableAmountStyle: availableAmountStatus,\n            salaryStyle: salaryStatus,\n            defaultsStyle: '1',\n        }\n    }\n\n    onSpend(amount) {\n\n        const prevEx = this.state.todayExpense || 0\n        const newExpense = amount === '' ? 0 : parseInt(amount)\n\n        this.setState({\n            todayExpense: prevEx + parseInt(newExpense),\n            availableAmount: this.state.availableAmount - parseInt(newExpense),\n        })\n    }\n\n    render() {\n        const status = this.getStatus()\n\n        return <div className = \"container\">\n            <NavBar \n                profile = ' active'/>\n\n            <UserJumbotron \n                backgroundColorIndex = {status.backgroundColorIndex}\n                userData={this.state} \n                style = {status.dailyExpenseStyle}/>\n\n            <p \n                style = {{backgroundColor: status.availableAmountStyle}}> \n                You have {this.state.availableAmount} Money</p>\n\n            {/* <SingleInput \n                style = {status.defaultsStyle}\n                onSubmit = {(amount) => this.onSpend(amount)} \n                inputType = 'number'\n                inputLabel = 'Your Expense Here'\n                inputSubmitLabel = \"Spend\"\n\n                />\n            \n            {this.state.isNewMonth ?\n            <SingleInput \n                style = {status.salaryStyle}\n                onSubmit = {(salary) => this.onSalaryReceiving(salary)}\n                inputType = 'number'\n                inputSubmitLabel = 'Recieved My Salary'\n                defaultValue = {this.state.isIncomeRegular ? this.state.income : ''} /> :\n                <p style={status.salaryStyle}>You have got your Salary</p> }\n\n            <PlanView \n                style = {status.planStyle}\n                hasPlan = {this.state.hasPlan}\n                plan = {this.state.plan}\n                income = {this.state.income}\n                todayEx = {this.state.todayExpense} /> */}\n            \n        </div>\n    }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}