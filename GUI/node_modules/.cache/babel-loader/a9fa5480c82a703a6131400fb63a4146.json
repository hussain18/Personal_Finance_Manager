{"ast":null,"code":"var _jsxFileName = \"/home/hussain/Desktop/React/starter/personal_finace_manager/src/components/userProfile.js\";\nimport NavBar from './nav.js';\nimport React from 'react'; //////////////////////// STYLES \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  1: 'rgba(16, 77, 8,0.2)',\n  2: 'rgba(112, 185, 43,0.2)',\n  3: 'rgba(219, 146, 63,0.2)',\n  4: 'rgba(102, 27, 9,0.2)'\n};\nlet userImgStyle = {\n  height: 100,\n  width: 100,\n  borderRadius: 90\n};\nlet containerStyle = {\n  backgroundColor: 'rgba(0,0,0,0.099999',\n  padding: 17,\n  borderRadius: 30,\n  margin: 10,\n  marginLeft: 20,\n  marginRight: 20\n};\nlet pageStyle = {\n  paddingTop: 20\n}; //////////////////////// VIEWS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\nfunction progressBarFiller(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: props.style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n}\n\nfunction UserImg(props) {\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: props.picture,\n    style: userImgStyle,\n    alt: \"person img\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n}\n\n_c = UserImg;\n\nclass SingleInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let defaultValue = this.props.defaultValue ? this.props.defaultValue : '';\n    this.setState({\n      value: defaultValue\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    this.props.onSubmit(this.state.value);\n    this.setState({\n      value: ''\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      style: this.props.style,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group \",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          \"aria-label\": \"Recipient's username\",\n          \"aria-describedby\": \"button-addon2\",\n          type: this.props.inputType,\n          value: this.state.value,\n          onChange: this.handleChange,\n          placeholder: this.props.inputLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-outline-secondary\",\n          type: \"submit\",\n          value: this.props.inputSubmitLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction UserJumbotron(props) {\n  // alert(props.hasPlan)\n  const toSaveToday = props.userData.hasPlan ? props.userData.plan.amount / (props.userData.plan.duration * 30) : 0;\n  const toSpendToday = props.userData.income / 30 - toSaveToday;\n  const todayExpense = props.userData.todayExpense;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: props.style,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-4\",\n      children: [/*#__PURE__*/_jsxDEV(UserImg, {\n        picture: props.userData.picture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), props.userData.userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [\"You have spent \", todayExpense, \" out of \", toSpendToday]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = UserJumbotron;\n\nfunction PlanView(props) {\n  const toSaveToday = props.hasPlan ? props.plan.amount / (props.plan.duration * 30) : 0;\n  const todaySaving = props.income / 30 - props.todayEx;\n  return props.hasPlan ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: props.style,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your plan is to save \", props.plan.amount, \" in \", props.plan.duration, \" months\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Today you have saved: \", todaySaving]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Target saving for today: \", toSaveToday]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You have no plans \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"Click Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 34\n      }, this), \" to Create one\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = PlanView;\nexport default class UserProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: 'Sagar Sikchi',\n      picture: 'https://www.jbldrains.com/wp-content/uploads/2015/02/person-icon.png',\n      hasPlan: true,\n      income: 420000,\n      availableAmount: 20000,\n      plan: {\n        amount: 90000,\n        duration: 3\n      },\n      isNewMonth: true,\n      isIncomeRegular: true,\n      todayExpense: 0\n    };\n  }\n\n  onSalaryReceiving(salaryAmount) {\n    this.setState({\n      isNewMonth: false,\n      availableAmount: this.state.availableAmount + parseInt(salaryAmount)\n    });\n  }\n\n  getStatus() {\n    // Getting daily Expense Status\n    let dailyExpenseStatus = { ...containerStyle\n    };\n    const everydayEx = this.state.income / 30;\n    const todayEx = this.state.todayExpense;\n\n    if (todayEx / everydayEx < 0.5) {\n      dailyExpenseStatus.backgroundColor = statusColors['1'];\n    } else if (todayEx / everydayEx < 0.8) {\n      dailyExpenseStatus.backgroundColor = statusColors['2'];\n    } else if (todayEx / everydayEx < 1) {\n      dailyExpenseStatus.backgroundColor = statusColors['3'];\n    } else {\n      dailyExpenseStatus.backgroundColor = statusColors['4'];\n    } // Getting Plan Status\n\n\n    let planStatus = { ...containerStyle\n    };\n    const toSaveToday = this.state.hasPlan ? this.state.plan.amount / (this.state.plan.duration * 30) : 0;\n    const todaySaving = everydayEx - todayEx;\n\n    if (todaySaving - toSaveToday > 0) {\n      planStatus.backgroundColor = statusColors['1'];\n    } else if (todaySaving - toSaveToday === 0) {\n      planStatus.backgroundColor = statusColors['2'];\n    } else {\n      planStatus.backgroundColor = statusColors['4'];\n    } // Getting available amount status\n\n\n    let availableAmountStatus = { ...containerStyle\n    };\n    const availableAmount = this.state.availableAmount;\n\n    if (availableAmount > 1000) {\n      availableAmountStatus.backgroundColor = statusColors['1'];\n    } else if (availableAmount > 500) {\n      availableAmountStatus.backgroundColor = statusColors['2'];\n    } else if (availableAmount > 10) {\n      availableAmountStatus.backgroundColor = statusColors['3'];\n    } else {\n      availableAmountStatus.backgroundColor = statusColors['4'];\n    } // Salary Receiving Status\n\n\n    let salaryStatus = { ...containerStyle\n    };\n\n    if (this.state.isIncomeRegular) {\n      if (this.state.isNewMonth) {\n        salaryStatus.backgroundColor = statusColors['3'];\n      } else {\n        salaryStatus.backgroundColor = statusColors['1'];\n      }\n    }\n\n    return {\n      dailyExpenseStyle: dailyExpenseStatus,\n      planStyle: planStatus,\n      availableAmountStyle: availableAmountStatus,\n      salaryStyle: salaryStatus,\n      defaultsStyle: { ...containerStyle\n      }\n    };\n  }\n\n  onSpend(amount) {\n    const prevEx = this.state.todayExpense;\n    this.setState({\n      todayExpense: prevEx + parseInt(amount),\n      availableAmount: this.state.availableAmount - parseInt(amount)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        profile: \" active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(UserJumbotron, {\n        userData: this.state,\n        style: this.getStatus().dailyExpenseStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: this.getStatus().availableAmountStyle,\n        children: [\"You have \", this.state.availableAmount, \" Money\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SingleInput, {\n        style: this.getStatus().defaultsStyle,\n        onSubmit: amount => this.onSpend(amount),\n        inputType: \"number\",\n        inputLabel: \"Your Expense Here\",\n        inputSubmitLabel: \"Spend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this), this.state.isNewMonth ? /*#__PURE__*/_jsxDEV(SingleInput, {\n        style: this.getStatus().salaryStyle,\n        onSubmit: salary => this.onSalaryReceiving(salary),\n        inputType: \"number\",\n        inputSubmitLabel: \"Recieved My Salary\",\n        defaultValue: this.state.isIncomeRegular ? this.state.income : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: this.getStatus().salaryStyle,\n        children: \"You have got your Salary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlanView, {\n        style: this.getStatus().planStyle,\n        hasPlan: this.state.hasPlan,\n        plan: this.state.plan,\n        income: this.state.income,\n        todayEx: this.state.todayExpense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 16\n    }, this);\n  }\n\n} // DONE\n// 7. Profile Page\n// \ti. Name \n// \tii. picture\n// \tiii. status of plan (if exist)/none plan\n// \tiv. expense input\n// \tv. recieved confirming input (in case of first of months of regular income)\n// \tvi. recieved income amount input (in case of non-regular income)\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UserImg\");\n$RefreshReg$(_c2, \"UserJumbotron\");\n$RefreshReg$(_c3, \"PlanView\");","map":{"version":3,"sources":["/home/hussain/Desktop/React/starter/personal_finace_manager/src/components/userProfile.js"],"names":["NavBar","React","statusColors","userImgStyle","height","width","borderRadius","containerStyle","backgroundColor","padding","margin","marginLeft","marginRight","pageStyle","paddingTop","progressBarFiller","props","style","UserImg","picture","SingleInput","Component","constructor","state","value","handleChange","bind","handleSubmit","componentDidMount","defaultValue","setState","event","target","onSubmit","preventDefault","render","inputType","inputLabel","inputSubmitLabel","UserJumbotron","toSaveToday","userData","hasPlan","plan","amount","duration","toSpendToday","income","todayExpense","userName","PlanView","todaySaving","todayEx","UserProfile","availableAmount","isNewMonth","isIncomeRegular","onSalaryReceiving","salaryAmount","parseInt","getStatus","dailyExpenseStatus","everydayEx","planStatus","availableAmountStatus","salaryStatus","dailyExpenseStyle","planStyle","availableAmountStyle","salaryStyle","defaultsStyle","onSpend","prevEx","salary"],"mappings":"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","sourcesContent":["import NavBar from './nav.js'\nimport React from 'react'\n\n\n\n//////////////////////// STYLES \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \nconst statusColors = {\n    1: 'rgba(16, 77, 8,0.2)',\n    2: 'rgba(112, 185, 43,0.2)',\n    3: 'rgba(219, 146, 63,0.2)',\n    4: 'rgba(102, 27, 9,0.2)',\n}\n\n\nlet userImgStyle = {\n    height: 100,\n    width: 100,\n    borderRadius: 90,\n}\n\nlet containerStyle = {\n    backgroundColor: 'rgba(0,0,0,0.099999',\n    padding: 17,\n    borderRadius: 30,\n    margin: 10,\n    marginLeft: 20,\n    marginRight: 20,\n}\n\nlet pageStyle = {\n    paddingTop: 20,\n}\n\n\n//////////////////////// VIEWS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nfunction progressBarFiller(props) {\n    return <div style={props.style}></div>\n}\n\nfunction UserImg(props) {\n    return <img src = {props.picture} style={userImgStyle} alt=\"person img\"/>\n}\n\nclass SingleInput extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {value: ''};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        let defaultValue = this.props.defaultValue ? this.props.defaultValue : ''\n        this.setState({\n            value: defaultValue\n        })\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      this.props.onSubmit(this.state.value)\n      this.setState({\n        value: ''\n      })\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit} style={this.props.style}>\n            <div className = 'input-group '>\n                <input \n                    className='form-control'\n                    aria-label=\"Recipient's username\" \n                    aria-describedby=\"button-addon2\"\n                    type={this.props.inputType} \n                    value={this.state.value} \n                    onChange={this.handleChange} \n                    placeholder={this.props.inputLabel}/>\n\n                <input \n                    className = 'btn btn-outline-secondary'\n                    type=\"submit\" \n                    value={this.props.inputSubmitLabel} />\n            </div>\n        </form>\n      );\n    }\n}\n\nfunction UserJumbotron(props) {\n    // alert(props.hasPlan)\n\n    const toSaveToday = props.userData.hasPlan? props.userData.plan.amount/(props.userData.plan.duration * 30) : 0\n    const toSpendToday = props.userData.income/30-toSaveToday\n    const todayExpense = props.userData.todayExpense\n\n    return <div style={props.style}>\n            <h1 className=\"display-4\" >\n                <UserImg picture = {props.userData.picture}/>\n                {props.userData.userName}\n            </h1>\n            <p className=\"lead\">You have spent {todayExpense} out of {toSpendToday}</p>\n        </div>\n}\n\nfunction PlanView(props) {\n    const toSaveToday = props.hasPlan? props.plan.amount/(props.plan.duration * 30) : 0\n    const todaySaving = props.income/30 - props.todayEx\n    return  props.hasPlan ? \n        <div style={props.style}>\n            <p>Your plan is to save {props.plan.amount} in {props.plan.duration} months</p>\n            <p>Today you have saved: {todaySaving}</p>\n            <p>Target saving for today: {toSaveToday}</p>\n        </div> :\n\n        <div style={containerStyle}>\n            <p>You have no plans <a href = \"#\">Click Here</a> to Create one</p>\n        </div>\n}\n\nexport default class UserProfile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userName: 'Sagar Sikchi',\n            picture: 'https://www.jbldrains.com/wp-content/uploads/2015/02/person-icon.png',\n            hasPlan: true,\n            income: 420000,\n            availableAmount: 20000,\n            plan: {\n                amount: 90000,\n                duration: 3,\n            },\n            isNewMonth: true,\n            isIncomeRegular: true,\n            todayExpense: 0,\n        }\n    }\n\n    onSalaryReceiving(salaryAmount) {\n        this.setState({\n            isNewMonth: false,\n            availableAmount: this.state.availableAmount + parseInt(salaryAmount),\n        })\n    }\n\n    getStatus() {\n        \n        // Getting daily Expense Status\n        let dailyExpenseStatus = {\n            ...containerStyle\n        }\n\n        const everydayEx = this.state.income/30\n        const todayEx = this.state.todayExpense\n        \n        if(todayEx/everydayEx < 0.5) {\n            dailyExpenseStatus.backgroundColor = statusColors['1']\n        } else if (todayEx/everydayEx < 0.8) {\n            dailyExpenseStatus.backgroundColor = statusColors['2']\n        } else if(todayEx/everydayEx < 1) {\n            dailyExpenseStatus.backgroundColor = statusColors['3']\n        } else {\n            dailyExpenseStatus.backgroundColor = statusColors['4']\n        }\n\n\n        // Getting Plan Status\n        let planStatus = {\n            ...containerStyle\n        }\n        const toSaveToday = this.state.hasPlan? this.state.plan.amount/(this.state.plan.duration * 30) : 0\n        const todaySaving = everydayEx - todayEx                                                                \n        if((todaySaving - toSaveToday) > 0) {\n            planStatus.backgroundColor = statusColors['1']\n        } else if ((todaySaving - toSaveToday) === 0) {\n            planStatus.backgroundColor = statusColors['2']\n        } else {\n            planStatus.backgroundColor = statusColors['4']\n        }\n\n        // Getting available amount status\n        let availableAmountStatus = {...containerStyle}\n        const availableAmount = this.state.availableAmount\n\n        if (availableAmount > 1000) {\n            availableAmountStatus.backgroundColor = statusColors['1']\n        } else if (availableAmount > 500){\n            availableAmountStatus.backgroundColor = statusColors['2']\n        } else if (availableAmount > 10) {\n            availableAmountStatus.backgroundColor = statusColors['3']\n        } else {\n            availableAmountStatus.backgroundColor = statusColors['4']\n        }\n\n        // Salary Receiving Status\n        let salaryStatus = {...containerStyle}\n        if(this.state.isIncomeRegular) {\n            if (this.state.isNewMonth) {\n                salaryStatus.backgroundColor = statusColors['3']\n            } else {\n                salaryStatus.backgroundColor = statusColors['1']\n            }\n        } \n\n        return {\n            dailyExpenseStyle: dailyExpenseStatus,\n            planStyle: planStatus,\n            availableAmountStyle: availableAmountStatus,\n            salaryStyle: salaryStatus,\n            defaultsStyle: {...containerStyle}\n        }\n    }\n\n    onSpend(amount) {\n\n        const prevEx = this.state.todayExpense\n\n        this.setState({\n            todayExpense: prevEx + parseInt(amount),\n            availableAmount: this.state.availableAmount - parseInt(amount),\n        })\n    }\n\n    render() {\n        return <div className = \"container\">\n            <NavBar \n                profile = ' active'/>\n\n            <UserJumbotron \n                userData={this.state} \n                style = {this.getStatus().dailyExpenseStyle}/>\n\n            <p \n                style = {this.getStatus().availableAmountStyle}> \n                You have {this.state.availableAmount} Money</p>\n\n            <SingleInput \n                style = {this.getStatus().defaultsStyle}\n                onSubmit = {(amount) => this.onSpend(amount)} \n                inputType = 'number'\n                inputLabel = 'Your Expense Here'\n                inputSubmitLabel = \"Spend\"\n\n                />\n            \n            {this.state.isNewMonth ?\n            <SingleInput \n                style = {this.getStatus().salaryStyle}\n                onSubmit = {(salary) => this.onSalaryReceiving(salary)}\n                inputType = 'number'\n                inputSubmitLabel = 'Recieved My Salary'\n                defaultValue = {this.state.isIncomeRegular ? this.state.income : ''} /> :\n                <p style={this.getStatus().salaryStyle}>You have got your Salary</p> }\n\n            <PlanView \n                style = {this.getStatus().planStyle}\n                hasPlan = {this.state.hasPlan}\n                plan = {this.state.plan}\n                income = {this.state.income}\n                todayEx = {this.state.todayExpense} />\n            \n        </div>\n    }\n\n}\n\n\n\n// DONE\n// 7. Profile Page\n// \ti. Name \n// \tii. picture\n// \tiii. status of plan (if exist)/none plan\n// \tiv. expense input\n// \tv. recieved confirming input (in case of first of months of regular income)\n// \tvi. recieved income amount input (in case of non-regular income)"]},"metadata":{},"sourceType":"module"}