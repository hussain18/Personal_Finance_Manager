[{"/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/index.js":"1","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/App.js":"2","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/reportWebVitals.js":"3","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/api.js":"4","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/userProfile.js":"5","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/settings.js":"6","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/login.js":"7","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/signUp.js":"8","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/makePlan.js":"9","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/landing_page/landingPage.js":"10","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/expenseReport.js":"11","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/nav.js":"12","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/styles/backgroundColors.js":"13","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/styles/templates.js":"14"},{"size":499,"mtime":1622535835042,"results":"15","hashOfConfig":"16"},{"size":1206,"mtime":1622535835042,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1621840608246,"results":"18","hashOfConfig":"16"},{"size":2506,"mtime":1622535835042,"results":"19","hashOfConfig":"16"},{"size":8946,"mtime":1622535835042,"results":"20","hashOfConfig":"16"},{"size":5519,"mtime":1621840608246,"results":"21","hashOfConfig":"16"},{"size":2419,"mtime":1622535835042,"results":"22","hashOfConfig":"16"},{"size":5676,"mtime":1622535835042,"results":"23","hashOfConfig":"16"},{"size":5316,"mtime":1621840608246,"results":"24","hashOfConfig":"16"},{"size":3912,"mtime":1622535835042,"results":"25","hashOfConfig":"16"},{"size":10607,"mtime":1621840608238,"results":"26","hashOfConfig":"16"},{"size":2358,"mtime":1622535835042,"results":"27","hashOfConfig":"16"},{"size":531,"mtime":1621840608246,"results":"28","hashOfConfig":"16"},{"size":862,"mtime":1621840608246,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"folltw",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/index.js",[],"/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/App.js",[],"/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/reportWebVitals.js",[],"/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/api.js",["63"],"require('dotenv').config()\n\nconst axios = require('axios').default\n\nconst SERVER_URL = 'http://localhost:3001'\nconst LOCAL_TOKEN = 'refreshToken.authorize'\nlet REFRESH_TOKEN = null\nconst HEADERS = {'Content-type': 'application/json'}\n\n// Getting Authority status\nconst getAuth = () => {\n    if (!REFRESH_TOKEN) {\n      REFRESH_TOKEN = window.localStorage.getItem(LOCAL_TOKEN)\n    }\n    return REFRESH_TOKEN\n  }\n\n// Getting Refreshed Tokens\nconst getToken = async () => {\n    const refreshToken = REFRESH_TOKEN || window.localStorage.getItem(LOCAL_TOKEN)\n    const res = await axios.post(SERVER_URL+'/refresh-token', {token: refreshToken})\n    return res.data.token\n} \n\nconst saveRefreshToken = (token) => {\n    window.localStorage.setItem(LOCAL_TOKEN, token)}\n\nconst removeAuth = () => {\n    window.localStorage.removeItem(LOCAL_TOKEN)}\n\n\n// Authenticating requests\nconst login = async (userData) => {\n    try {\n        const opts = {\n            url: SERVER_URL+'/login',\n            body: userData\n        }\n        const tokens = await POST(opts)\n        const refreshToken = await tokens.refreshToken\n        saveRefreshToken(refreshToken)\n    } catch (err) {\n        console.log('LOGIN_ERROR: \\n'+err)\n    }\n}\n\nconst signup = async (userData) => {\n    try {\n        const opts = {\n            url: SERVER_URL+'/signup',\n            body: userData\n        }\n        const tokens = await POST(opts)\n        const refreshToken = await tokens.refreshToken\n        saveRefreshToken(refreshToken)\n    } catch (err) {\n        console.log('SIGNUP_ERROR: \\n'+err)\n    }\n}\n\n// Authorized Requests\nconst authRequest = async (url, request, body = {}) => {\n    try {\n        const opts = {\n            url: SERVER_URL+url,\n            body: body,\n            headers: {\n                authorization: await getToken()\n            }\n        }\n\n        const res = await request(opts)\n        return res\n\n    } catch (err) {\n        console.log('AUTHORIZED_REQUEST_ERROR: \\n', err)\n    }\n\n}\n\n// Basic requests\nasync function GET(opts) {\n    const URL = opts.url\n    const header = opts.headers ? opts.headers : HEADERS\n    const res = await axios.get(URL, {headers: header})\n    return res.data;\n}\n\nasync function POST(opts){\n\n    const URL = opts.url\n    const header = opts.headers ? opts.headers : HEADERS\n    const body = opts.body\n    const res = await axios.post(URL, body) \n    return res.data;\n\n}\n\n\nmodule.exports = {\n    signup,\n    login,\n    authRequest,\n    GET,\n    POST,\n    getAuth,\n    removeAuth,\n}\n","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/userProfile.js",["64","65","66","67","68"],"import NavBar from './nav.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {bgColors, bgColorsMidOp} from './styles/backgroundColors.js'\nimport ProgressBar from './styles/templates.js'\nimport {GET,authRequest} from '../api.js'\n\n\n\n//////////////////////// STYLES \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \nconst statusColors = {...bgColors}\n\nconst progressBarColors = {...bgColorsMidOp}\n\nlet userImgStyle = {\n    height: 100,\n    width: 100,\n    borderRadius: 90,\n}\n\n//////////////////////// VIEWS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst ProgressBarFiller = styled.div`\n    width: ${props => props.width}%;\n    padding: 2%;\n    border-radius: 15px;\n\n`\n\nfunction UserImg(props) {\n    return <img src = {props.picture} style={userImgStyle} alt=\"person img\"/>\n}\n\nclass SingleInput extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {value: undefined};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        let defaultValue = this.props.defaultValue ? this.props.defaultValue : ''\n        this.setState({\n            value: defaultValue\n        })\n    }\n  \n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      this.props.onSubmit(this.state.value)\n      this.setState({\n        value: ''\n      })\n      event.preventDefault();\n    }\n  \n    render() {\n\n        const componentStyle = {\n            backgroundColor: statusColors[this.props.style]\n            //...\n        }\n\n      return (\n        <form onSubmit={this.handleSubmit} style={componentStyle} \n            className='component-container container-hovered' >\n            <div className = 'input-group '>\n                <input \n                    className='form-control'\n                    aria-label=\"Recipient's username\" \n                    aria-describedby=\"button-addon2\"\n                    type={this.props.inputType} \n                    min={0}\n                    value={this.state.value} \n                    onChange={this.handleChange} \n                    placeholder={this.props.inputLabel}/>\n\n                <input \n                    className = 'btn btn-outline-secondary'\n                    type=\"submit\" \n                    value={this.props.inputSubmitLabel} />\n            </div>\n        </form>\n      );\n    }\n}\n\nfunction UserJumbotron(props) {\n    const toSaveToday = props.userData.hasPlan? props.userData.plan.amount/(props.userData.plan.duration * 30) : 0\n    const toSpendToday = props.userData.income/30-toSaveToday\n    const todayExpense = props.userData.todayExpense\n    const expensePercentage = () => {\n        let percentage = (todayExpense*95)/toSpendToday\n        percentage = percentage > 100 ? 100 : percentage\n        percentage = percentage < 0 ? 0 : percentage\n        return percentage\n    }\n\n    // Creating style of progress bar filler\n    var componentStyle = {\n        backgroundColor: statusColors[props.style]\n    }\n\n    var progressBarBackground = progressBarColors[props.style]\n    \n\n    return <div style={componentStyle} className=\"component-container container-hovered\" >\n            <h1 className=\"display-4\" >\n                <UserImg picture = {props.userData.picture}/>\n                {props.userData.userName}\n            </h1>\n            <p className=\"lead\">You have spent {todayExpense} out of {toSpendToday}</p>\n            \n            <ProgressBar\n                background = {progressBarBackground}\n                width = {expensePercentage()} />\n        </div>\n}\n\nfunction PlanView(props) {\n    const toSaveToday = props.hasPlan? props.plan.amount/(props.plan.duration * 30) : 0\n    const todaySaving = props.income/30 - props.todayEx\n\n    var componentStyle = {\n        backgroundColor: statusColors[props.style]\n        // Can add more styles...\n    }\n\n    return  props.hasPlan ? \n        <div style={componentStyle} className = 'component-container container-hovered'>\n            <p>Your plan is to save {props.plan.amount} in {props.plan.duration} months</p>\n            <p>Today you have saved: {todaySaving}</p>\n            <p>Target saving for today: {toSaveToday}</p>\n        </div> :\n\n        <div style={componentStyle} className = 'component-container container-hovered'>\n            <p>You have no plans <a href = \"#\">Click Here</a> to Create one</p>\n        </div>\n}\n\nexport default class UserProfile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userName: 'Sagar Sikchi',\n            picture: 'https://www.jbldrains.com/wp-content/uploads/2015/02/person-icon.png',\n            hasPlan: true,\n            income: 420000,\n            availableAmount: 20000,\n            plan: {\n                amount: 90000,\n                duration: 3,\n            },\n            isNewMonth: true,\n            isIncomeRegular: true,\n            todayExpense: 0,\n        }\n    }\n\n    onSalaryReceiving(salaryAmount) {\n        this.setState({\n            isNewMonth: false,\n            availableAmount: this.state.availableAmount + parseInt(salaryAmount),\n        })\n    }\n\n    getStatus() {\n        \n        // Getting daily Expense Status\n        let dailyExpenseStatus = '1'\n\n        const everydayEx = this.state.income/30\n        const todayEx = this.state.todayExpense\n        const expenseRate = todayEx/everydayEx\n        \n        if(expenseRate > 1) dailyExpenseStatus = '4';\n        else if(expenseRate > 0.66) dailyExpenseStatus = '3';\n        else if(expenseRate > 0.33) dailyExpenseStatus = '2';\n\n\n        // Getting Plan Status\n        let planStatus = '1'\n        const toSaveToday = this.state.hasPlan? this.state.plan.amount/(this.state.plan.duration * 30) : 0\n        const todaySaving = everydayEx - todayEx                                                                \n        if(todaySaving < 0) planStatus = '4';\n        else if (todaySaving === 0) planStatus = '2';\n\n        // Getting available amount status\n        let availableAmountStatus = '1'\n        const availableAmount = this.state.availableAmount\n\n        if (availableAmount < 50) availableAmountStatus = '4'\n        else if (availableAmount < 500) availableAmountStatus = '3'\n        else if (availableAmount < 1000) availableAmountStatus = '2'\n        \n        // Salary Receiving Status\n        let salaryStatus = '2'\n        if(this.state.isIncomeRegular) {\n            salaryStatus = '1'\n            if (this.state.isNewMonth) \n                salaryStatus = '3'; \n        } \n\n        return {\n            dailyExpenseStyle: dailyExpenseStatus,\n            planStyle: planStatus,\n            availableAmountStyle: availableAmountStatus,\n            salaryStyle: salaryStatus,\n            defaultsStyle: '1',\n        }\n    }\n\n    onSpend(amount) {\n\n        const prevEx = this.state.todayExpense || 0\n        const newExpense = amount === '' ? 0 : parseInt(amount)\n\n        this.setState({\n            todayExpense: prevEx + parseInt(newExpense),\n            availableAmount: this.state.availableAmount - parseInt(newExpense),\n        })\n    }\n\n    render() {\n        const status = this.getStatus()\n\n        return <div className = \"container\">\n            <NavBar \n                profile = ' active'/>\n\n            <UserJumbotron \n                backgroundColorIndex = {status.backgroundColorIndex}\n                userData={this.state} \n                style = {status.dailyExpenseStyle}/>\n\n            <p \n                style = {{backgroundColor: statusColors[status.availableAmountStyle]}}\n                className = 'component-container container-hovered'\n                > \n                You have {this.state.availableAmount} Money</p>\n\n            <SingleInput \n                style = {status.defaultsStyle}\n                onSubmit = {(amount) => this.onSpend(amount)} \n                inputType = 'number'\n                inputLabel = 'Your Expense Here'\n                inputSubmitLabel = \"Spend\"\n\n                />\n            \n            {this.state.isNewMonth ?\n            <SingleInput \n                style = {status.salaryStyle}\n                onSubmit = {(salary) => this.onSalaryReceiving(salary)}\n                inputType = 'number'\n                inputSubmitLabel = 'Recieved My Salary'\n                defaultValue = {this.state.isIncomeRegular ? this.state.income : ''} /> :\n                <p \n                    style={{backgroundColor: statusColors[status.salaryStyle]}}\n                    className = 'component-container container-hovered'\n                    >You have got your Salary</p> }\n\n            <PlanView \n                style = {status.planStyle}\n                hasPlan = {this.state.hasPlan}\n                plan = {this.state.plan}\n                income = {this.state.income}\n                todayEx = {this.state.todayExpense} />\n            \n        </div>\n    }\n\n}\n\n\n","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/settings.js",[],"/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/login.js",["69"],"import React, { Component} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {login} from '../api'\nimport NavBar from './nav.js'\n\n\nexport default class Settings extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {}\n        this.handleChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n\n        const userData = this.state\n        login(userData).then(() => window.location.reload())\n\n        event.preventDefault()\n    }\n\n    render() {\n        return <div className = \"container\">\n\n            <NavBar logIn = ' active' />\n\n            <h1 className = 'page-title'>Login</h1>\n\n            <form onSubmit={this.handleSubmit} className = \"form-floating form-style component-container\">\n                \n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='text'\n                        name= 'username'\n                        value={this.state.username}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Username/Email:  </label>\n\n                </div>\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='password'\n                        name= 'password'\n                        value={this.state.password}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Password:  </label>\n\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit</button>\n\n            </form>\n        \n        </div>\n    }\n}\n","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/signUp.js",["70","71"],"import React, { Component} from 'react'\nimport NavBar from './nav.js'\nimport {Redirect} from 'react-router-dom'\nimport {bgColors} from './styles/backgroundColors.js'\nimport {signup} from '../api.js'\n\nexport default class Settings extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {}\n        this.handleChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        \n        const userData = this.state\n        signup(userData).then(() => window.location.reload())\n        event.preventDefault()\n    }\n\n    render() {\n        return <div className = \"container\">\n\n            <NavBar signUp = ' active' />\n\n            <h1 className = 'page-title'>Sign Up</h1>\n\n            <form onSubmit={this.handleSubmit} className = \"form-floating form-style component-container\" >\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='text'\n                        name= 'name'\n                        value={this.state.name}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Name:  </label>\n\n                </div>\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='text'\n                        name= 'username'\n                        value={this.state.username}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Username:  </label>\n\n                </div>\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='password'\n                        name= 'password'\n                        value={this.state.password}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Password:  </label>\n\n                </div>\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='password'\n                        name= 'confirm-password'\n                        value={this.state.confirmPassword}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Confirm Password:  </label>\n\n                </div>\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='email'\n                        name= 'email'\n                        value={this.state.email}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Email  </label>\n\n                </div>\n\n                { this.state.isIncomeRegular ?\n                  <div>\n                  <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='number'\n                        name= 'incomeAmount'\n                        value={this.state.incomeAmount}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Income Amount  </label>\n\n                </div>\n                </div>: null}\n\n                <div className=\"form-check\">\n                    <input \n                            name = \"isIncomeRegular\"\n                            type = 'checkbox'\n                            onChange = {(event) => this.handleInputChange(event)}\n                            checked = {this.state.isIncomeRegular} \n                            className=\"form-check-input\"\n                            id=\"flexCheckDefault\"/>\n                    <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\" >\n                        Regular Income\n                    </label>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary mt-3 mb-4\">Submit</button>\n\n                <hr/>\n                <p>if you already have an account <a href = '/log_in'>click here</a> </p>\n\n            </form>\n        \n        </div>\n    }\n}\n","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/makePlan.js",[],"/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/landing_page/landingPage.js",["72"],"import './style.css'\n\n// Images paths\nconst add_img = require('../img/add_img.png').default\nconst plan_img = require('../img/plan_img.png').default\nconst manage_img = require('../img/manage_img.png').default\nconst team_member_img = require('../img/team_member_img.png').default\nconst phone_img = require('../img/phone_img.png').default\nconst email_img = require('../img/email_img.png').default\nconst address_img = require('../img/address_img.png').default\n\n// NON-Authorized link\nconst NON_AUTH_LINK = '/'\n\nconsole.log(add_img)\n\n// Utility Views\nfunction GetStartedButton(props) {\n    return <a className ='btn btn-primary btn-lg mt-2' \n        href=\"/sign_up\" >\n        {props.content}\n    </a>\n}\n\nfunction Card(props) {\n    const img = props.img || \"some img\"\n    const content = props.content || \"some content\"\n\n    return <>\n        <img src = {img} className='rounded card-img' alt = \"a png\"/>\n        <hr/>\n        <p className = 'fs-5 font-monospace'>{content}</p>\n    </>\n}\n\nfunction Row(props) {\n\n    const col_1 = props.col_1 || \"Empty Column ...\"\n    const col_2 = props.col_2 || \"Empty Column ...\"\n    const col_3 = props.col_3 || \"Empty Column ...\"\n\n    return <div className = \"row align-content-center\">\n        <div className = 'col text-center'>\n            {col_1}\n        </div>\n\n        <div className = 'col text-center'>\n            {col_2}\n        </div>\n\n        <div className = 'col text-center'>\n            {col_3}\n        </div>\n    </div>\n}\n\n// Main Views\nfunction GettingStartedView(props) {\n\n    const buttonContent = props.auth ? 'To Your Profile...' : 'Get Started...'\n    const link = true ? '/profile' : '/sign_up'\n\n    return <div \n        className=\"getting-started-container \n            hovered\">\n\n        <div className = 'text-box'>\n            <h1 className='fs-1 fw-bolder '>Personal Finance Manger</h1>\n            <hr className='mb-5'/>\n            <p >Make it easy to manage the pocket</p>\n            <GetStartedButton \n                content = {buttonContent}\n                link = {link} />\n        </div>\n\n    </div>\n}\n\nfunction AboutAppView(props) {\n    return <div className = 'about-app-b landing-components hovered'>\n        <div className = 'text-box'>\n            <h1 className = 'landing-title'>About App</h1>\n            <Row \n                col_1 = {<Card img = {add_img} content = 'Add it (expense/income)'/>}\n                col_2 = {<Card img = {plan_img} content = 'Create a saving plan'/>}\n                col_3 = {<Card img = {manage_img} content = 'We manage all your personal finance'/>} />\n        </div>\n    </div>\n}\n\nfunction OurTeamView(props) {\n    return <div className = 'our-team-b landing-components hovered'>\n        <div className = 'text-box'>\n            <h1 className = 'landing-title'>Our Team</h1>\n            <Row \n                col_1 = {<Card img = {team_member_img} content = 'Talib Hussain Naseri'/>}\n                col_2 = {<Card img = {team_member_img} content = 'Shantanu Suntake'/>}\n                col_3 = {<Card img = {team_member_img} content = 'Adarsh Kadewar'/>} />\n        </div>\n    </div>\n}\n\nfunction ContactUsView(props) {\n    return <div className = 'contact-us-b landing-components hovered'>\n        <div className = 'text-box'>\n            <h1 className='landing-title' >Contact Us</h1>\n            <Row \n                col_1 = {<Card img = {phone_img} content = '(+91) 9158798418'/>}\n                col_2 = {<Card img = {email_img} content = 'personal_f_m@gmail.com'/>}\n                col_3 = {<Card img = {address_img} content = 'VIT, Pune, Maharashtra, India'/>} />\n        </div>\n    </div>\n}\n\n// Exported \nexport default function LandingPage(props) {\n\n    return <div className = \"container\">\n\n        <GettingStartedView auth = {props.auth} />\n        <AboutAppView auth = {props.auth} />\n        <OurTeamView auth = {props.auth} />\n        <ContactUsView auth = {props.auth} />\n\n    </div>\n}\n","/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/expenseReport.js",[],"/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/nav.js",[],"/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/styles/backgroundColors.js",[],"/home/zx/code/personal-finance/Personal_Finance_Manager/GUI/src/components/styles/templates.js",[],{"ruleId":"73","severity":1,"message":"74","line":92,"column":11,"nodeType":"75","messageId":"76","endLine":92,"endColumn":17},{"ruleId":"73","severity":1,"message":"77","line":6,"column":9,"nodeType":"75","messageId":"76","endLine":6,"endColumn":12},{"ruleId":"73","severity":1,"message":"78","line":6,"column":13,"nodeType":"75","messageId":"76","endLine":6,"endColumn":24},{"ruleId":"73","severity":1,"message":"79","line":22,"column":7,"nodeType":"75","messageId":"76","endLine":22,"endColumn":24},{"ruleId":"80","severity":1,"message":"81","line":143,"column":34,"nodeType":"82","endLine":143,"endColumn":48},{"ruleId":"73","severity":1,"message":"83","line":191,"column":15,"nodeType":"75","messageId":"76","endLine":191,"endColumn":26},{"ruleId":"73","severity":1,"message":"84","line":2,"column":9,"nodeType":"75","messageId":"76","endLine":2,"endColumn":17},{"ruleId":"73","severity":1,"message":"84","line":3,"column":9,"nodeType":"75","messageId":"76","endLine":3,"endColumn":17},{"ruleId":"73","severity":1,"message":"85","line":4,"column":9,"nodeType":"75","messageId":"76","endLine":4,"endColumn":17},{"ruleId":"73","severity":1,"message":"86","line":13,"column":7,"nodeType":"75","messageId":"76","endLine":13,"endColumn":20},"no-unused-vars","'header' is assigned a value but never used.","Identifier","unusedVar","'GET' is defined but never used.","'authRequest' is defined but never used.","'ProgressBarFiller' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'toSaveToday' is assigned a value but never used.","'Redirect' is defined but never used.","'bgColors' is defined but never used.","'NON_AUTH_LINK' is assigned a value but never used."]