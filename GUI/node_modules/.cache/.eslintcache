[{"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/index.js":"1","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/App.js":"2","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/reportWebVitals.js":"3","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/settings.js":"4","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/makePlan.js":"5","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/signUp.js":"6","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/login.js":"7","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/landing_page/landingPage.js":"8","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/userProfile.js":"9","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/expenseReport.js":"10","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/nav.js":"11","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/styles/backgroundColors.js":"12","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/styles/templates.js":"13","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/api.js":"14"},{"size":515,"mtime":1616510953835,"results":"15","hashOfConfig":"16"},{"size":1124,"mtime":1621145784692,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1616426486126,"results":"18","hashOfConfig":"16"},{"size":5519,"mtime":1621609938015,"results":"19","hashOfConfig":"16"},{"size":5316,"mtime":1621610020869,"results":"20","hashOfConfig":"16"},{"size":5985,"mtime":1621770824080,"results":"21","hashOfConfig":"16"},{"size":2163,"mtime":1621610047570,"results":"22","hashOfConfig":"16"},{"size":3575,"mtime":1621610183677,"results":"23","hashOfConfig":"16"},{"size":8976,"mtime":1621709627731,"results":"24","hashOfConfig":"16"},{"size":10607,"mtime":1621610125632,"results":"25","hashOfConfig":"16"},{"size":1923,"mtime":1619603374859,"results":"26","hashOfConfig":"16"},{"size":531,"mtime":1619943590003,"results":"27","hashOfConfig":"16"},{"size":862,"mtime":1621707015237,"results":"28","hashOfConfig":"16"},{"size":359,"mtime":1621767283332,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1hbtm8v",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/index.js",[],["61","62"],"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/App.js",[],"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/reportWebVitals.js",[],"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/settings.js",[],"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/makePlan.js",[],"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/signUp.js",["63"],"import React, { Component} from 'react'\nimport NavBar from './nav.js'\nimport {bgColors} from './styles/backgroundColors.js'\nimport {POST} from '../api.js'\n\nexport default class Settings extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {}\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        \n        POST('/posts', () => this.state)\n        .then(() => console.log(\"Submitted\"))\n    }\n\n    render() {\n        return <div className = \"container\">\n\n            <NavBar signUp = ' active' />\n\n            <h1 className = 'page-title'>Sign Up</h1>\n\n            <form onSubmit={this.handleSubmit} className = \"form-floating form-style component-container\" >\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='text'\n                        name= 'name'\n                        value={this.state.name}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Name:  </label>\n\n                </div>\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='text'\n                        name= 'username'\n                        value={this.state.username}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Username:  </label>\n\n                </div>\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='password'\n                        name= 'password'\n                        value={this.state.password}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Password:  </label>\n\n                </div>\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='password'\n                        name= 'confirm-password'\n                        value={this.state.confirmPassword}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Confirm Password:  </label>\n\n                </div>\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='email'\n                        name= 'email'\n                        value={this.state.email}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Email  </label>\n\n                </div>\n\n                { this.state.isIncomeRegular ?\n                  <div>\n                  <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='number'\n                        name= 'incomeAmount'\n                        value={this.state.incomeAmount}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Income Amount  </label>\n\n                </div>\n                <div className = \"input-group input-group-lg mb-3 form-floating\">\n                    <input \n                        className=\"form-control\" \n                        id=\"floatingInputValue\"\n                        type='text'\n                        name= 'incomePeriod'\n                        value={this.state.incomePeriod}\n                        onChange = {(event) => this.handleInputChange(event)} />\n                    \n                    <label \n                        htmlFor=\"floatingInputValue\" >\n                        Income Period  </label>\n\n                </div> \n                </div>: null}\n\n                <div className=\"form-check\">\n                    <input \n                            name = \"isIncomeRegular\"\n                            type = 'checkbox'\n                            onChange = {(event) => this.handleInputChange(event)}\n                            checked = {this.state.isIncomeRegular} \n                            className=\"form-check-input\"\n                            id=\"flexCheckDefault\"/>\n                    <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\" >\n                        Regular Income\n                    </label>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit</button>\n\n            </form>\n        \n        </div>\n    }\n}\n","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/login.js",[],"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/landing_page/landingPage.js",[],"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/userProfile.js",["64","65","66"],"import NavBar from './nav.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {bgColors, bgColorsMidOp} from './styles/backgroundColors.js'\nimport ProgressBar from './styles/templates.js'\nimport {GET} from '../api.js'\n\n\n\n//////////////////////// STYLES \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \nconst statusColors = {...bgColors}\n\nconst progressBarColors = {...bgColorsMidOp}\n\nlet userImgStyle = {\n    height: 100,\n    width: 100,\n    borderRadius: 90,\n}\n\n//////////////////////// VIEWS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst ProgressBarFiller = styled.div`\n    width: ${props => props.width}%;\n    padding: 2%;\n    border-radius: 15px;\n\n`\n\nfunction UserImg(props) {\n    return <img src = {props.picture} style={userImgStyle} alt=\"person img\"/>\n}\n\nclass SingleInput extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {value: undefined};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        let defaultValue = this.props.defaultValue ? this.props.defaultValue : ''\n        this.setState({\n            value: defaultValue\n        })\n    }\n  \n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      this.props.onSubmit(this.state.value)\n      this.setState({\n        value: ''\n      })\n      event.preventDefault();\n    }\n  \n    render() {\n\n        const componentStyle = {\n            backgroundColor: statusColors[this.props.style]\n            //...\n        }\n\n      return (\n        <form onSubmit={this.handleSubmit} style={componentStyle} \n            className='component-container container-hovered' >\n            <div className = 'input-group '>\n                <input \n                    className='form-control'\n                    aria-label=\"Recipient's username\" \n                    aria-describedby=\"button-addon2\"\n                    type={this.props.inputType} \n                    min={0}\n                    value={this.state.value} \n                    onChange={this.handleChange} \n                    placeholder={this.props.inputLabel}/>\n\n                <input \n                    className = 'btn btn-outline-secondary'\n                    type=\"submit\" \n                    value={this.props.inputSubmitLabel} />\n            </div>\n        </form>\n      );\n    }\n}\n\nfunction UserJumbotron(props) {\n    const toSaveToday = props.userData.hasPlan? props.userData.plan.amount/(props.userData.plan.duration * 30) : 0\n    const toSpendToday = props.userData.income/30-toSaveToday\n    const todayExpense = props.userData.todayExpense\n    const expensePercentage = () => {\n        let percentage = (todayExpense*95)/toSpendToday\n        percentage = percentage > 100 ? 100 : percentage\n        percentage = percentage < 0 ? 0 : percentage\n        return percentage\n    }\n\n    // Creating style of progress bar filler\n    var componentStyle = {\n        backgroundColor: statusColors[props.style]\n    }\n\n    var progressBarBackground = progressBarColors[props.style]\n    \n\n    return <div style={componentStyle} className=\"component-container container-hovered\" >\n            <h1 className=\"display-4\" >\n                <UserImg picture = {props.userData.picture}/>\n                {props.userData.userName}\n            </h1>\n            <p className=\"lead\">You have spent {todayExpense} out of {toSpendToday}</p>\n            \n            <ProgressBar\n                background = {progressBarBackground}\n                width = {expensePercentage()} />\n        </div>\n}\n\nfunction PlanView(props) {\n    const toSaveToday = props.hasPlan? props.plan.amount/(props.plan.duration * 30) : 0\n    const todaySaving = props.income/30 - props.todayEx\n\n    var componentStyle = {\n        backgroundColor: statusColors[props.style]\n        // Can add more styles...\n    }\n\n    return  props.hasPlan ? \n        <div style={componentStyle} className = 'component-container container-hovered'>\n            <p>Your plan is to save {props.plan.amount} in {props.plan.duration} months</p>\n            <p>Today you have saved: {todaySaving}</p>\n            <p>Target saving for today: {toSaveToday}</p>\n        </div> :\n\n        <div style={componentStyle} className = 'component-container container-hovered'>\n            <p>You have no plans <a href = \"#\">Click Here</a> to Create one</p>\n        </div>\n}\n\nexport default class UserProfile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userName: 'Sagar Sikchi',\n            picture: 'https://www.jbldrains.com/wp-content/uploads/2015/02/person-icon.png',\n            hasPlan: true,\n            income: 420000,\n            availableAmount: 20000,\n            plan: {\n                amount: 90000,\n                duration: 3,\n            },\n            isNewMonth: true,\n            isIncomeRegular: true,\n            todayExpense: 0,\n        }\n    }\n\n    onSalaryReceiving(salaryAmount) {\n        this.setState({\n            isNewMonth: false,\n            availableAmount: this.state.availableAmount + parseInt(salaryAmount),\n        })\n    }\n\n    getStatus() {\n        \n        // Getting daily Expense Status\n        let dailyExpenseStatus = '1'\n\n        const everydayEx = this.state.income/30\n        const todayEx = this.state.todayExpense\n        const expenseRate = todayEx/everydayEx\n        \n        if(expenseRate > 1) dailyExpenseStatus = '4';\n        else if(expenseRate > 0.66) dailyExpenseStatus = '3';\n        else if(expenseRate > 0.33) dailyExpenseStatus = '2';\n\n\n        // Getting Plan Status\n        let planStatus = '1'\n        const toSaveToday = this.state.hasPlan? this.state.plan.amount/(this.state.plan.duration * 30) : 0\n        const todaySaving = everydayEx - todayEx                                                                \n        if(todaySaving < 0) planStatus = '4';\n        else if (todaySaving === 0) planStatus = '2';\n\n        // Getting available amount status\n        let availableAmountStatus = '1'\n        const availableAmount = this.state.availableAmount\n\n        if (availableAmount < 50) availableAmountStatus = '4'\n        else if (availableAmount < 500) availableAmountStatus = '3'\n        else if (availableAmount < 1000) availableAmountStatus = '2'\n        \n        // Salary Receiving Status\n        let salaryStatus = '2'\n        if(this.state.isIncomeRegular) {\n            salaryStatus = '1'\n            if (this.state.isNewMonth) \n                salaryStatus = '3'; \n        } \n\n        return {\n            dailyExpenseStyle: dailyExpenseStatus,\n            planStyle: planStatus,\n            availableAmountStyle: availableAmountStatus,\n            salaryStyle: salaryStatus,\n            defaultsStyle: '1',\n        }\n    }\n\n    onSpend(amount) {\n\n        const prevEx = this.state.todayExpense || 0\n        const newExpense = amount === '' ? 0 : parseInt(amount)\n\n        this.setState({\n            todayExpense: prevEx + parseInt(newExpense),\n            availableAmount: this.state.availableAmount - parseInt(newExpense),\n        })\n    }\n\n    render() {\n        const status = this.getStatus()\n\n        //TEST...\n        GET('/users') \n\n        return <div className = \"container\">\n            <NavBar \n                profile = ' active'/>\n\n            <UserJumbotron \n                backgroundColorIndex = {status.backgroundColorIndex}\n                userData={this.state} \n                style = {status.dailyExpenseStyle}/>\n\n            <p \n                style = {{backgroundColor: statusColors[status.availableAmountStyle]}}\n                className = 'component-container container-hovered'\n                > \n                You have {this.state.availableAmount} Money</p>\n\n            <SingleInput \n                style = {status.defaultsStyle}\n                onSubmit = {(amount) => this.onSpend(amount)} \n                inputType = 'number'\n                inputLabel = 'Your Expense Here'\n                inputSubmitLabel = \"Spend\"\n\n                />\n            \n            {this.state.isNewMonth ?\n            <SingleInput \n                style = {status.salaryStyle}\n                onSubmit = {(salary) => this.onSalaryReceiving(salary)}\n                inputType = 'number'\n                inputSubmitLabel = 'Recieved My Salary'\n                defaultValue = {this.state.isIncomeRegular ? this.state.income : ''} /> :\n                <p \n                    style={{backgroundColor: statusColors[status.salaryStyle]}}\n                    className = 'component-container container-hovered'\n                    >You have got your Salary</p> }\n\n            <PlanView \n                style = {status.planStyle}\n                hasPlan = {this.state.hasPlan}\n                plan = {this.state.plan}\n                income = {this.state.income}\n                todayEx = {this.state.todayExpense} />\n            \n        </div>\n    }\n\n}\n\n\n","/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/expenseReport.js",[],"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/nav.js",[],"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/styles/backgroundColors.js",[],"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/components/styles/templates.js",[],"/home/hussain/Desktop/React/starter/personal_finace_manager/GUI/src/api.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":9,"nodeType":"73","messageId":"74","endLine":3,"endColumn":17},{"ruleId":"71","severity":1,"message":"75","line":22,"column":7,"nodeType":"73","messageId":"74","endLine":22,"endColumn":24},{"ruleId":"76","severity":1,"message":"77","line":143,"column":34,"nodeType":"78","endLine":143,"endColumn":48},{"ruleId":"71","severity":1,"message":"79","line":191,"column":15,"nodeType":"73","messageId":"74","endLine":191,"endColumn":26},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'bgColors' is defined but never used.","Identifier","unusedVar","'ProgressBarFiller' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'toSaveToday' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]